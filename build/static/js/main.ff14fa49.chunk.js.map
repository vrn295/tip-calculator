{"version":3,"sources":["TotalAmount.js","BillingForm.jsx","App.js","index.js"],"names":["TotalAmount","props","amount","tip","useState","totalAmount","setTotalAmount","totalTip","setTotalTip","useEffect","console","log","isNaN","billAmount","peopleNum","tipPerc","parseFloat","toFixed","className","onClick","handleReset","BillingForm","setBillAmount","setTipPerc","setPeopleNum","handlleBill","item","event","value","target","parseInt","handleTip","document","getElementById","type","onChange","e","id","placeholder","App","ReactDOM","render","StrictMode"],"mappings":"qMAEe,SAASA,EAAYC,GACnC,IAEIC,EAAQC,EAFZ,EAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAcA,OAZAC,qBAAU,WACTC,QAAQC,IAAIV,GACRW,MAAMX,EAAMY,aAAgBD,MAAMX,EAAMa,YACvB,IAArBb,EAAMY,YAAwC,IAApBZ,EAAMa,WACX,KAArBb,EAAMY,YAAyC,KAApBZ,EAAMa,YAChCZ,GAAUD,EAAMY,WAAeZ,EAAMc,QAAUd,EAAMY,WAAY,KAAMZ,EAAMa,UAC7EX,GAAQF,EAAMY,WAAeZ,EAAMc,QAAUd,EAAMY,WAAY,IAAQZ,EAAMY,YAAYZ,EAAMa,WAEhGR,EAAeU,WAAWd,GAAQe,QAAQ,IAC1CT,EAAYQ,WAAWb,GAAKc,QAAQ,MAElC,CAAChB,IAEH,sBAAKiB,UAAU,yBAAf,UACC,sBAAKA,UAAU,mBAAf,UACC,sBAAKA,UAAW,cAAhB,UACC,4CACA,4CAED,mCAAON,MAAML,GAAuB,OAAXA,QAE1B,sBAAKW,UAAU,mBAAf,UACC,sBAAKA,UAAW,cAAhB,UACC,uCACA,4CAED,mCAAON,MAAMP,GAA6B,OAAdA,QAE7B,wBACCa,UAAU,YACVC,QAASlB,EAAMmB,YAFhB,sBC9BY,SAASC,IACvB,MAAoCjB,qBAApC,mBAAOS,EAAP,KAAmBS,EAAnB,KACA,EAA8BlB,mBAAS,GAAvC,mBAAOW,EAAP,KAAgBQ,EAAhB,KACA,EAAkCnB,qBAAlC,mBAAOU,EAAP,KAAkBU,EAAlB,KAEMC,EAAc,SAACC,EAAMC,GAC1B,IAAMC,EAAQD,EAAME,OAAOD,MAAQE,SAASH,EAAME,OAAOD,OAAS,GACzD,SAATF,EAAkBJ,EAAcM,GACrB,QAATF,EAAiBH,EAAWK,GAC5BJ,EAAaI,IAEVG,EAAY,SAACH,GAClBI,SAASC,eAAe,6BAA6BL,MAAQ,GAC7DL,EAAWO,SAASF,KAUrB,OACC,sBAAKV,UAAU,yBAAf,UACC,uBAAMA,UAAU,eAAhB,UACC,sBAAKA,UAAU,kBAAf,UACC,0CAGA,uBACCgB,KAAK,OACLN,MAAOf,EACPsB,SAAU,SAACC,GAAD,OAAMX,EAAY,OAAQW,IACpCC,GAAG,yBAGL,sBAAKnB,UAAU,kBAAf,UACC,kDAGA,sBACCA,UAAU,mBACVU,MAAOb,EAFR,UAIC,qBAAKG,UAAS,uBAA8B,IAAZH,EAAgB,gBAAiB,IAAMI,QAAS,kBAAMY,EAAU,MAAhG,gBAGA,qBAAKb,UAAS,uBAA8B,KAAZH,EAAiB,gBAAiB,IAAMI,QAAS,kBAAMY,EAAU,OAAjG,iBAGA,qBAAKb,UAAS,uBAA8B,KAAZH,EAAiB,gBAAiB,IAAMI,QAAS,kBAAMY,EAAU,OAAjG,iBAGA,qBAAKb,UAAS,uBAA8B,KAAZH,EAAiB,gBAAiB,IAAMI,QAAS,kBAAMY,EAAU,OAAjG,iBAGA,qBAAKb,UAAS,uBAA8B,KAAZH,EAAiB,gBAAiB,IAAMI,QAAS,kBAAMY,EAAU,OAAjG,iBAGA,uBACCG,KAAK,OACLG,GAAG,4BACHC,YAAY,SACZH,SAAU,SAACC,GAAD,OAAMX,EAAY,MAAOW,YAItC,sBAAKlB,UAAU,kBAAf,UACC,mDAGA,uBACCgB,KAAK,OACLN,MAAOd,EACPqB,SAAU,SAACC,GAAD,OAAMX,EAAY,SAAUW,IACtCC,GAAG,4BAIN,cAACrC,EAAD,CACCa,WAAYA,EACZE,QAASA,EACTK,YAnEiB,WACnBE,EAAc,GACdC,EAAW,GACXC,EAAa,GACbQ,SAASC,eAAe,6BAA6BL,MAAQ,IAgE3Dd,UAAWA,O,MC9EAyB,MARf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,cAACG,EAAD,OCDNmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASC,eAAe,W","file":"static/js/main.ff14fa49.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nexport default function TotalAmount(props) {\r\n\tconst [totalAmount, setTotalAmount] = useState(0)\r\n\tconst [totalTip, setTotalTip] = useState(0.00)\r\n\tvar amount, tip\r\n\tuseEffect(() => {\r\n\t\tconsole.log(props)\r\n\t\tif(!isNaN(props.billAmount) && !isNaN(props.peopleNum) && \r\n\t\tprops.billAmount !== 0 && props.peopleNum !== 0 &&\r\n\t\tprops.billAmount !== \"\" && props.peopleNum !== \"\"){\r\n\t\t\tamount = (props.billAmount + ((props.tipPerc * props.billAmount)/100))/props.peopleNum\r\n\t\t\ttip = ((props.billAmount + ((props.tipPerc * props.billAmount)/100)) - props.billAmount)/props.peopleNum\r\n\t\t}\r\n\t\tsetTotalAmount(parseFloat(amount).toFixed(2))\r\n\t\tsetTotalTip(parseFloat(tip).toFixed(2))\r\n\r\n\t}, [props])\r\n\treturn (\r\n\t\t<div className=\"total-amount-container\">\r\n\t\t\t<div className=\"amount-container\">\r\n\t\t\t\t<div className= \"amount-desc\">\r\n\t\t\t\t\t<h3>Tip Amount</h3>\r\n\t\t\t\t\t<p>/ person</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h1>${!isNaN(totalTip) ? totalTip : \"0.00\"}</h1>\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"amount-container\">\r\n\t\t\t\t<div className= \"amount-desc\">\r\n\t\t\t\t\t<h3>Total</h3>\r\n\t\t\t\t\t<p>/ person</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h1>${!isNaN(totalAmount) ? totalAmount : \"0.00\"}</h1>\t\r\n\t\t\t</div>\r\n\t\t\t<button \r\n\t\t\t\tclassName=\"reset-btn\"\r\n\t\t\t\tonClick={props.handleReset}\r\n\t\t\t>RESET</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport TotalAmount from './TotalAmount'\r\n// import './BillingForm.css';\r\n\r\nexport default function BillingForm() {\r\n\tconst [billAmount, setBillAmount] = useState()\r\n\tconst [tipPerc, setTipPerc] = useState(5)\r\n\tconst [peopleNum, setPeopleNum] = useState()\r\n\r\n\tconst handlleBill = (item, event) => {\r\n\t\tconst value = event.target.value ? parseInt(event.target.value) : \"\"\r\n\t\titem === \"bill\" ? setBillAmount(value)\r\n\t\t: item === \"tip\" ? setTipPerc(value)\r\n\t\t: setPeopleNum(value)\r\n\t}\r\n\tconst handleTip = (value) => {\r\n\t\tdocument.getElementById(\"billing-form-custom-input\").value = \"\"\r\n\t\tsetTipPerc(parseInt(value))\r\n\t}\r\n\t\r\n\tconst handleReset = () => {\r\n\t\tsetBillAmount(0)\r\n\t\tsetTipPerc(5)\r\n\t\tsetPeopleNum(0)\r\n\t\tdocument.getElementById(\"billing-form-custom-input\").value = \"\"\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"billing-form-container\">\r\n\t\t\t<form className=\"billing-form\" >\r\n\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tBill:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tvalue={billAmount}\r\n\t\t\t\t\t\tonChange={(e) =>handlleBill(\"bill\", e)} \r\n\t\t\t\t\t\tid=\"billing-form-bill\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tSelect Tip %:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"billing-form-tip\"\r\n\t\t\t\t\t\tvalue={tipPerc}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className={`tip-container${tipPerc === 5 ? \" selected-tip\": \"\"}`} onClick={() => handleTip(\"5\")}>\r\n\t\t\t\t\t\t\t5%\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={`tip-container${tipPerc === 10 ? \" selected-tip\": \"\"}`} onClick={() => handleTip(\"10\")}>\r\n\t\t\t\t\t\t\t10%\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={`tip-container${tipPerc === 15 ? \" selected-tip\": \"\"}`} onClick={() => handleTip(\"15\")}>\r\n\t\t\t\t\t\t\t15%\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={`tip-container${tipPerc === 25 ? \" selected-tip\": \"\"}`} onClick={() => handleTip(\"25\")}>\r\n\t\t\t\t\t\t\t25%\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={`tip-container${tipPerc === 50 ? \" selected-tip\": \"\"}`} onClick={() => handleTip(\"50\")}>\r\n\t\t\t\t\t\t\t50%\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\tid=\"billing-form-custom-input\"\r\n\t\t\t\t\t\t\tplaceholder=\"Custom\"\r\n\t\t\t\t\t\t\tonChange={(e) =>handlleBill(\"tip\", e)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tNo. of People:\r\n\t\t\t\t\t</label>\t\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tvalue={peopleNum}\r\n\t\t\t\t\t\tonChange={(e) =>handlleBill(\"people\", e)} \r\n\t\t\t\t\t\tid=\"billing-form-bill\" \r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t\t<TotalAmount \r\n\t\t\t\tbillAmount={billAmount}\r\n\t\t\t\ttipPerc={tipPerc}\r\n\t\t\t\thandleReset={handleReset}\r\n\t\t\t\tpeopleNum={peopleNum}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import BillingForm from \"./BillingForm\";\nimport './App.css'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BillingForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}